
.tagSelector h1{color:#0c0; font-size:20px;}
.tagSelector p{color:#0cf; font-size:15px;}
.tagSelector span{color:#336; font-size:13px;}

/*태그선택자 사용법*/

.idSelector p#paragraph1{font-size:16px; text-decoration:underline;}
.idSelector p#paragraph2{color:#09F; text-decoration:line-through;}
.idSelector p#paragraph3{font-weight:bold; text-decoration:overline;}

/*ID선택자 사용법*/

.classSelector p.f_size{font-size:20px;}
.classSelector p.f_weight{font-weight:bold;}
.classSelector p.f_color{color:#9cf;}

/*CLASS 선택자 사용법 + 다중 클래스 지정 */


.attrSelector fieldset{
    border: 1px solid #555; background-color: slateblue;
}
.attrSelector fieldset legend{
    border: 1px solid slateblue; background-color: #555; color: white;
    padding: 10px;
}
.attrSelector fieldset ul{
    margin: 0; padding: 0; list-style: none;
}
.attrSelector fieldset ul li{
    color: white; font-size: 14px; line-height: 30px;
}
.attrSelector fieldset ul li label{
    width: 100px; display: inline-block;
}
.attrSelector fieldset ul li input{
    padding: 5px; vertical-align: middle;
}
.attrSelector fieldset ul li input[type='text']{
    background-color: salmon; border: 3px solid lightcoral; color: maroon;
}
.attrSelector fieldset ul li input[type='password']{
    background-color: lightgreen; border: 3px solid lime;
}
/* width만 주면 적용 안됨 height 같이 주기 */
.attrSelector fieldset ul li input[type='radio']{
    /* background-color: black; border: 5px solid yellow; */
    width: 25px; height: 25px;
}
.attrSelector fieldset ul li input[type='checkbox']{
    /* background-color: black; border: 5px solid yellow; */
    width: 25px; height: 25px;
}
.directSelector > h1{
    font-size: 28px; color: slateblue;
}
/* 같은 태그들이 부모자식 관계로 종속되게 되면 직계>는 의미가 없어짐 버블링 났다? 
    css의 c의 속성이 강해서 직계 span>span>span이 되어버림 동일한 태그가 반복될 때는 직계>를 신중하게 사용해야함
    안을 집는게 아니라 안에 있는 첫번째 직계 선상만 집어내는 것 */
.directSelector > span{
    font-size: 22px; color: maroon; line-height: 40px; font-weight: bold;
}
/* h1이하에 있는 모든 동위선상에 있는 h2에 적용 (div가 있다해도 적용) */
.sameSelector h1 ~ h2{
    background-color: #333; color: white;
}
/* h1 바로 뒤에 있는 h2 우리가 많이 씀 */
.sameSelector h1 + h2{
    font-size: 40px; color: plum;
}
/* $= 맨 뒤 */
.stringAttrSelector img[src$='png']{
    width: 100px; border: 3px solid #f00;
}
.stringAttrSelector img[src$='jpg']{
    width: 150px; border: 5px solid palegoldenrod;
} 
.stringAttrSelector img[src$='gif']{
    width: 200px; border: 10px solid palegreen;
}  
/* *= 전체 중에 이 '제목'이 일치되는 부분이 있다면 */
.stringAttrSelector h1[title*='제목']{
    color: red;
}
/*  ^= 해당 단어로 시작하는 것만 */
.stringAttrSelector h1[title^='남자']{
    color: blue;
}
/* ! a에 국한된 것이 아님 div등등 다른 곳에 올렸을때도 js활용하면 가능 */
.eventSelector a{
    display: block; font-size: 14px; line-height: 30px; text-align: center;
    margin-bottom: 20px;
}
/* link가 걸린 상태 = href attr을 지닌 상태 default상태*/
.eventSelector a:link{
    color: red;
}
/* 커서가 올라갔을때 */
.eventSelector a:hover{
    color: black; background-color: red; text-decoration: none;
}
/* 클릭이 일어났을떄 깜빡거리는.. (press상태와 동일하게 봄)
    클릭하는 순간은 엄청 찰나이기 때문에 확인하기가 힘듬*/
.eventSelector a:active{
    color: white; background-color: black;
}
/* 방문한 적이 있는 상태 */
.eventSelector a:visited{
    background-color: gray; color: mediumspringgreen;
}
/* 초점이 맞춰진 상태 */
.eventSelector a:focus{
    border: 3px solid deeppink;
}
/* label은 인라인 */
.statusSelector input[type='checkbox']+label{
    display: inline-block; line-height: 20px; font-size: 14px; 
    transition-duration: 0.75s;
}
/* ! font-size 6.77 기준 사라짐 */
/* checkbox가 체크된 상태 */
.statusSelector input[type='checkbox']:checked+label{
    line-height: 0px; font-size: 0px;  
}